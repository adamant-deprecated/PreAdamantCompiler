//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from PreAdamantParser_Antlr.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace PreAdamant.Compiler.Syntax.Antlr {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PreAdamantParser_Antlr"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface IPreAdamantParser_AntlrVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilationUnit([NotNull] PreAdamantParser_Antlr.CompilationUnitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.usingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingDirective([NotNull] PreAdamantParser_Antlr.UsingDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] PreAdamantParser_Antlr.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.namespaceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceName([NotNull] PreAdamantParser_Antlr.NamespaceNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute([NotNull] PreAdamantParser_Antlr.AttributeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.baseTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBaseTypes([NotNull] PreAdamantParser_Antlr.BaseTypesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.accessModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessModifier([NotNull] PreAdamantParser_Antlr.AccessModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.safetyModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSafetyModifier([NotNull] PreAdamantParser_Antlr.SafetyModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.classInheritanceModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassInheritanceModifier([NotNull] PreAdamantParser_Antlr.ClassInheritanceModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.methodInheritanceModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodInheritanceModifier([NotNull] PreAdamantParser_Antlr.MethodInheritanceModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.explicitModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplicitModifier([NotNull] PreAdamantParser_Antlr.ExplicitModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.asyncModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAsyncModifier([NotNull] PreAdamantParser_Antlr.AsyncModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.typeParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameters([NotNull] PreAdamantParser_Antlr.TypeParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.typeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameter([NotNull] PreAdamantParser_Antlr.TypeParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.typeArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeArguments([NotNull] PreAdamantParser_Antlr.TypeArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.identifierOrPredefinedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierOrPredefinedType([NotNull] PreAdamantParser_Antlr.IdentifierOrPredefinedTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] PreAdamantParser_Antlr.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnType([NotNull] PreAdamantParser_Antlr.ReturnTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.lifetime"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLifetime([NotNull] PreAdamantParser_Antlr.LifetimeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.funcTypeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncTypeParameterList([NotNull] PreAdamantParser_Antlr.FuncTypeParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.funcTypeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncTypeParameter([NotNull] PreAdamantParser_Antlr.FuncTypeParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.constExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstExpression([NotNull] PreAdamantParser_Antlr.ConstExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] PreAdamantParser_Antlr.ParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.parameterModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterModifier([NotNull] PreAdamantParser_Antlr.ParameterModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhereClause([NotNull] PreAdamantParser_Antlr.WhereClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.genericConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericConstraint([NotNull] PreAdamantParser_Antlr.GenericConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.constructorInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructorInitializer([NotNull] PreAdamantParser_Antlr.ConstructorInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] PreAdamantParser_Antlr.ArgumentListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.overloadableOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOverloadableOperator([NotNull] PreAdamantParser_Antlr.OverloadableOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreAdamantParser_Antlr.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] PreAdamantParser_Antlr.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>namespaceDeclaration</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceDeclaration([NotNull] PreAdamantParser_Antlr.NamespaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>classDeclaration</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclaration([NotNull] PreAdamantParser_Antlr.ClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>structDeclaration</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDeclaration([NotNull] PreAdamantParser_Antlr.StructDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>variableDeclaration</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] PreAdamantParser_Antlr.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionDeclaration</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] PreAdamantParser_Antlr.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>externalBlockDeclaration</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalBlockDeclaration([NotNull] PreAdamantParser_Antlr.ExternalBlockDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>precondition</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.contract"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrecondition([NotNull] PreAdamantParser_Antlr.PreconditionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>postcondition</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.contract"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostcondition([NotNull] PreAdamantParser_Antlr.PostconditionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifierName</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.simpleName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierName([NotNull] PreAdamantParser_Antlr.IdentifierNameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>genericName</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.simpleName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericName([NotNull] PreAdamantParser_Antlr.GenericNameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>qualifiedName</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedName([NotNull] PreAdamantParser_Antlr.QualifiedNameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unqualifiedName</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnqualifiedName([NotNull] PreAdamantParser_Antlr.UnqualifiedNameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>namedType</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamedType([NotNull] PreAdamantParser_Antlr.NamedTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>pointerType</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPointerType([NotNull] PreAdamantParser_Antlr.PointerTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tupleType</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTupleType([NotNull] PreAdamantParser_Antlr.TupleTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionType</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionType([NotNull] PreAdamantParser_Antlr.FunctionTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>maybeType</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaybeType([NotNull] PreAdamantParser_Antlr.MaybeTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lifetimeType</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.valueType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLifetimeType([NotNull] PreAdamantParser_Antlr.LifetimeTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>refType</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.valueType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRefType([NotNull] PreAdamantParser_Antlr.RefTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeParameterBoundConstraintClause</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeParameterConstraintClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameterBoundConstraintClause([NotNull] PreAdamantParser_Antlr.TypeParameterBoundConstraintClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeParameterRangeConstraintClause</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeParameterConstraintClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameterRangeConstraintClause([NotNull] PreAdamantParser_Antlr.TypeParameterRangeConstraintClauseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>constructorConstraint</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeParameterConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructorConstraint([NotNull] PreAdamantParser_Antlr.ConstructorConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeConstraint</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeParameterConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeConstraint([NotNull] PreAdamantParser_Antlr.TypeConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>typeListParameterConstraint</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.typeParameterConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeListParameterConstraint([NotNull] PreAdamantParser_Antlr.TypeListParameterConstraintContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>constructor</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructor([NotNull] PreAdamantParser_Antlr.ConstructorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>copyConstructor</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCopyConstructor([NotNull] PreAdamantParser_Antlr.CopyConstructorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>destructor</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDestructor([NotNull] PreAdamantParser_Antlr.DestructorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>conversionMethod</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConversionMethod([NotNull] PreAdamantParser_Antlr.ConversionMethodContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>field</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField([NotNull] PreAdamantParser_Antlr.FieldContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>accessor</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessor([NotNull] PreAdamantParser_Antlr.AccessorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>indexer</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexer([NotNull] PreAdamantParser_Antlr.IndexerContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>method</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod([NotNull] PreAdamantParser_Antlr.MethodContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>operatorOverload</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorOverload([NotNull] PreAdamantParser_Antlr.OperatorOverloadContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nestedClassDeclaration</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNestedClassDeclaration([NotNull] PreAdamantParser_Antlr.NestedClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>namedParameter</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamedParameter([NotNull] PreAdamantParser_Antlr.NamedParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>selfParameter</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelfParameter([NotNull] PreAdamantParser_Antlr.SelfParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>blockMethodBody</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockMethodBody([NotNull] PreAdamantParser_Antlr.BlockMethodBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>noMethodBody</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNoMethodBody([NotNull] PreAdamantParser_Antlr.NoMethodBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>variableDeclarationStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationStatement([NotNull] PreAdamantParser_Antlr.VariableDeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unsafeBlockStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnsafeBlockStatement([NotNull] PreAdamantParser_Antlr.UnsafeBlockStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>blockStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockStatement([NotNull] PreAdamantParser_Antlr.BlockStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmptyStatement([NotNull] PreAdamantParser_Antlr.EmptyStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] PreAdamantParser_Antlr.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] PreAdamantParser_Antlr.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>throwStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThrowStatement([NotNull] PreAdamantParser_Antlr.ThrowStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] PreAdamantParser_Antlr.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>letIfStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLetIfStatement([NotNull] PreAdamantParser_Antlr.LetIfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] PreAdamantParser_Antlr.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] PreAdamantParser_Antlr.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>deleteStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeleteStatement([NotNull] PreAdamantParser_Antlr.DeleteStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] PreAdamantParser_Antlr.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>simpleLocalVariableDeclaration</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.localVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleLocalVariableDeclaration([NotNull] PreAdamantParser_Antlr.SimpleLocalVariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>destructureLocalVariableDeclaration</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.localVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDestructureLocalVariableDeclaration([NotNull] PreAdamantParser_Antlr.DestructureLocalVariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] PreAdamantParser_Antlr.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>xorExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitXorExpression([NotNull] PreAdamantParser_Antlr.XorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>toExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitToExpression([NotNull] PreAdamantParser_Antlr.ToExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>booleanLiteralExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanLiteralExpression([NotNull] PreAdamantParser_Antlr.BooleanLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>castExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCastExpression([NotNull] PreAdamantParser_Antlr.CastExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>newMemoryExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewMemoryExpression([NotNull] PreAdamantParser_Antlr.NewMemoryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpression([NotNull] PreAdamantParser_Antlr.AndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tryExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTryExpression([NotNull] PreAdamantParser_Antlr.TryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] PreAdamantParser_Antlr.ParenthesizedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>newObjectExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewObjectExpression([NotNull] PreAdamantParser_Antlr.NewObjectExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unsafeExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnsafeExpression([NotNull] PreAdamantParser_Antlr.UnsafeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>uninitializedExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUninitializedExpression([NotNull] PreAdamantParser_Antlr.UninitializedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] PreAdamantParser_Antlr.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfExpression([NotNull] PreAdamantParser_Antlr.IfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nullLiteralExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullLiteralExpression([NotNull] PreAdamantParser_Antlr.NullLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nullCheckExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullCheckExpression([NotNull] PreAdamantParser_Antlr.NullCheckExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nameExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameExpression([NotNull] PreAdamantParser_Antlr.NameExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>deleteMemoryExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeleteMemoryExpression([NotNull] PreAdamantParser_Antlr.DeleteMemoryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>coalesceExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCoalesceExpression([NotNull] PreAdamantParser_Antlr.CoalesceExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>awaitExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAwaitExpression([NotNull] PreAdamantParser_Antlr.AwaitExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lambdaExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambdaExpression([NotNull] PreAdamantParser_Antlr.LambdaExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>newExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewExpression([NotNull] PreAdamantParser_Antlr.NewExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dotDotExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotDotExpression([NotNull] PreAdamantParser_Antlr.DotDotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intLiteralExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntLiteralExpression([NotNull] PreAdamantParser_Antlr.IntLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>assignmentExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] PreAdamantParser_Antlr.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicativeExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] PreAdamantParser_Antlr.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>magnitudeExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMagnitudeExpression([NotNull] PreAdamantParser_Antlr.MagnitudeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>memberExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberExpression([NotNull] PreAdamantParser_Antlr.MemberExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>placementDeleteExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlacementDeleteExpression([NotNull] PreAdamantParser_Antlr.PlacementDeleteExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringLiteralExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringLiteralExpression([NotNull] PreAdamantParser_Antlr.StringLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>comparativeExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparativeExpression([NotNull] PreAdamantParser_Antlr.ComparativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpression([NotNull] PreAdamantParser_Antlr.OrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>inExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInExpression([NotNull] PreAdamantParser_Antlr.InExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>arrayAccessExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayAccessExpression([NotNull] PreAdamantParser_Antlr.ArrayAccessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>callExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallExpression([NotNull] PreAdamantParser_Antlr.CallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>selfExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelfExpression([NotNull] PreAdamantParser_Antlr.SelfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>equalityExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] PreAdamantParser_Antlr.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>charLiteralExpression</c>
	/// labeled alternative in <see cref="PreAdamantParser_Antlr.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharLiteralExpression([NotNull] PreAdamantParser_Antlr.CharLiteralExpressionContext context);
}
} // namespace PreAdamant.Compiler.Syntax.Antlr
